plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
    id 'groovy'
}

group = 'dev.marcinromanowski'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.cloud:spring-cloud-starter'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.hibernate.validator:hibernate-validator:6.1.5.Final'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:3.1.4'
    implementation 'io.r2dbc:r2dbc-postgresql:0.8.13.RELEASE'

    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation platform("org.spockframework:spock-bom:$spockVersion")
    testImplementation 'org.spockframework:spock-core'
    testImplementation 'org.spockframework:spock-spring'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.testcontainers:postgresql:1.17.4'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'
    testImplementation 'com.squareup.okhttp3:okhttp:4.10.0'
}

tasks.named('test') {
    jvmArgs(['--enable-preview'])
    useJUnitPlatform()
}

tasks.withType(JavaCompile).all {
    options.compilerArgs += ['--enable-preview']
}
